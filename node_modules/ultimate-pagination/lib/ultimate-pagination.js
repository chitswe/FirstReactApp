"use strict";
var ultimate_pagination_utils_1 = require('./ultimate-pagination-utils');
var ultimate_pagination_item_factories_1 = require('./ultimate-pagination-item-factories');
function getPaginationModel(options) {
    var currentPage = options.currentPage, totalPages = options.totalPages;
    var paginationModel = [];
    var createPage = ultimate_pagination_item_factories_1.createPageFunctionFactory(options);
    // Calculate group of central pages
    var mainPagesStart = Math.max(2, Math.max(currentPage - 1, 3) - Math.max(0, currentPage + 3 - totalPages));
    var mainPagesEnd = Math.min(totalPages - 1, Math.min(currentPage + 1, totalPages - 2) + Math.max(0, 4 - currentPage));
    var mainPages = ultimate_pagination_utils_1.createRange(mainPagesStart, mainPagesEnd).map(createPage);
    paginationModel.push(ultimate_pagination_item_factories_1.createFirstPageLink(options));
    paginationModel.push(ultimate_pagination_item_factories_1.createPreviousPageLink(options));
    // Always add the first page
    paginationModel.push(createPage(1));
    // Show '...' or second page between the last page and main pages group if needed
    if (mainPagesStart > 3) {
        paginationModel.push(ultimate_pagination_item_factories_1.createFirstEllipsis(mainPagesStart - 1));
    }
    else if (mainPagesStart !== 2) {
        paginationModel.push(createPage(2));
    }
    // Add pages +/- from the current page
    paginationModel.push.apply(paginationModel, mainPages);
    // Show '...' or penult page between main pages group and the last page if needed
    if (mainPagesEnd < totalPages - 2) {
        paginationModel.push(ultimate_pagination_item_factories_1.createSecondEllipsis(mainPagesEnd + 1));
    }
    else if (mainPagesEnd !== totalPages - 1) {
        paginationModel.push(createPage(totalPages - 1));
    }
    if (totalPages > 1) {
        paginationModel.push(createPage(totalPages));
    }
    paginationModel.push(ultimate_pagination_item_factories_1.createNextPageLink(options));
    paginationModel.push(ultimate_pagination_item_factories_1.createLastPageLink(options));
    return paginationModel;
}
exports.getPaginationModel = getPaginationModel;
var ultimate_pagination_constants_1 = require('./ultimate-pagination-constants');
exports.ITEM_TYPES = ultimate_pagination_constants_1.ITEM_TYPES;
exports.ITEM_KEYS = ultimate_pagination_constants_1.ITEM_KEYS;
//# sourceMappingURL=ultimate-pagination.js.map